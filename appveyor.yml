version: build.{build}
image: Visual Studio 2022

skip_tags: true
skip_commits:
  files:
    - .github/
    - docs/
    - assets/
    - README.md
    - LICENSE
    - CODE_OF_CONDUCT.md
    - CONTRIBUTING.md
    - SECURITY.md

environment:
  github_access_token:
    secure: gtEHCUmmDjYfrp/NEe2qUAQyiaFUebrfsm9J2462zKHzyYtPU8unnK+SWVI6Zhn39z6J3tZueVbctz9w/ZByHF2pbLgUdUAgfKVyeR1Ohnm1sOjqOOMivlTCeBJ50ZNd

init:
- cmd: git config --global core.autocrlf true
- cmd: setx IGNORE_NORMALISATION_GIT_HEAD_MOVE 1
- cmd: setx DOTNET_NO_WORKLOAD_UPDATE_NOTIFICATION 1
- cmd: setx DOTNET_CLI_TELEMETRY_OPTOUT 1
- cmd: setx DOTNET_NOLOGO 1
- cmd: RefreshEnv.cmd


before_build:
- pwsh: Write-Host "Target branch is '$($env:APPVEYOR_REPO_BRANCH)'"
- cmd: gitversion /output buildserver /verbosity Minimal
- pwsh: Write-Host "Building Chrononuensis version $($env:GitVersion_SemVer)"
- pwsh: |
    . "$env:APPVEYOR_BUILD_FOLDER\github.ps1"
    if (($env:APPVEYOR_REPO_BRANCH -eq "main") -and ($null -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)) {
      $context = [PSCustomObject] @{
        Id = $env:APPVEYOR_REPO_COMMIT
        Owner = ($env:APPVEYOR_REPO_NAME -Split '/')[0]
        Repository = ($env:APPVEYOR_REPO_NAME -Split '/')[1]
        SecretToken = $env:github_access_token
      }
      foreach($id in ($context | Get-Commit-Associated-Pull-Requests)) {
        $context.Id = $id
        $context | Set-Pull-Request-Expected-Labels -Config '.github\conventional_commits_labels.json'
      }
    } else {
        Write-Host 'Not a merge on main built on appveyor. Skipping mapping conventional commits and labels.'
    }

build_script:
  - dotnet build Chrononuensis.sln -p:version="%GitVersion_SemVer%" -c Release /p:ContinuousIntegrationBuild=true --nologo 

test_script:
- pwsh: |
    $ErrorActionPreference = "Stop"
    dotnet test src/Chrononuensis.Core.Testing -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Include="[Chrononuensis]*" /p:Threshold=80 /p:ThresholdType=line /p:CoverletOutput=../../.coverage/coverage.Chrononuensis.xml --test-adapter-path:. --logger:Appveyor --no-build --nologo
    $globalTestResult = $LastExitCode
    if($globalTestResult -ne 0) { $host.SetShouldExit($globalTestResult) }

- pwsh: |
    $ProgressPreference = 'SilentlyContinue'
    Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -Outfile codecov.exe
    .\codecov.exe --dir "./.coverage/"

after_test:
- dotnet pack src/Chrononuensis.Core -p:version="%GitVersion_SemVer%" -c Release --include-symbols --no-build --nologo 

artifacts:
- path: '**\*.nupkg'
- path: '**\*.snupkg'
- path: '**\*.zip'

deploy:
- provider: NuGet
  api_key:
    secure: ReR8SwXwQlTUH7uCW/7Cyf4VHMo90KD4Cu/Qckue6HrAXygIwn1urnryBptusfoB
  skip_symbols: false
  artifact: /.*(\.|\.s)nupkg/
  on:
    branch: main

on_success:
- pwsh: |
    . "$env:APPVEYOR_BUILD_FOLDER\github.ps1"
    if (($env:APPVEYOR_REPO_BRANCH -eq "main") -and ($null -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)) {
        if ($env:GitVersion_Patch -eq '0' -or $env:GitVersion_Patch -eq 0) {
            $context = [PSCustomObject] @{
                Owner = ($env:APPVEYOR_REPO_NAME -Split '/')[0]
                Repository = ($env:APPVEYOR_REPO_NAME -Split '/')[1]
                SecretToken = $env:github_access_token
            }
            if (-not ($context | Check-Release-Published -Tag "v$($env:GitVersion_SemVer)")) {
                $context | Publish-Release `
                    -Tag "v$($env:GitVersion_SemVer)" `
                    -Name "$(($env:APPVEYOR_REPO_NAME -Split '/')[1]) $($env:GitVersion_SemVer)" `
                    -ReleaseNotes `
                    -DiscussionCategory 'Announcements'

                Start-Sleep -Seconds 5

                if (Test-Path -Path "./.publish") {
                    $context | Upload-Release-Assets `
                        -Tag "v$($env:GitVersion_SemVer)" `
                        -Path "./.publish"
                }
            }
        } else {
            Write-Host "No release published on GitHub when patch is not set to zero."
        }
    } else {
        Write-Host "No release published on GitHub when not on branch main."
    }
- pwsh: |
      Write-Host "Update of Parsers and Structs"
      Get-ChildItem -Path "./src/Chrononuensis.Core/" -Filter "*.yml" | ForEach-Object {
        $lowercaseName = $_.Name.ToLower()
        $destinationPath = Join-Path -Path "./docs/_data/" -ChildPath $lowercaseName
    
        Copy-Item -Path $_.FullName -Destination $destinationPath -Force
      }
      Write-Host "Push to GitHub"
      & git config --global credential.helper store
      Set-Content -Path "$HOME\.git-credentials" -Value "https://$($env:github_access_token):x-oauth-basic@github.com`n" -NoNewline
      & git config --global user.email "no-reply@nbiguity.io"
      & git config --global user.name "AppVeyor bot"
      & git add --all
      & git status
      & git commit -m "Update the automatically generated documentation related to the list of functions and predicates"
      & git push origin
