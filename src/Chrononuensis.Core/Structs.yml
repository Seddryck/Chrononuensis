- name: MonthDay
  default: MM-dd
  parts:
    - name: Month
      type: int
      min: 1
      max: 12
    - name: Day
      type: int
      min: 1
      maxF: GetDaysInMonth(Month)

- name: YearDay
  default: yyyy-jjj
  parts:
    - name: Year
      type: int
    - name: DayOfYear
      type: int
      min: 1
      maxF: 365 + Convert.ToInt32(DateTime.IsLeapYear(Year))
  period:
    first: new DateOnly(Year, 1, 1).AddDays(DayOfYear - 1)
    last: FirstDate

- name: YearWeek
  default: yyyy-'W'ww
  parts:
    - name: Year
      type: int
    - name: Week
      type: int
      min: 1
      maxF: ISOWeek.GetWeekOfYear(new DateTime(Year, 12, 28))
  period:
    first: DateOnly.FromDateTime(ISOWeek.GetYearStart(Year).AddDays(7 * (Week - 1)))
    last: FirstDate.AddDays(6)

- name: YearMonth
  default: yyyy-MM
  parts:
    - name: Year
      type: int
    - name: Month
      type: int
      min: 1
      max: 12
  period:
    byYear: 12

- name: YearQuarter
  default: yyyy-'Q'q
  parts:
    - name: Year
      type: int
    - name: Quarter
      type: int
      min: 1
      max: 4
  period:
    byYear: 4

- name: YearSemester
  default: yyyy-'H'S
  parts:
    - name: Year
      type: int
    - name: Semester
      type: int
      min: 1
      max: 2
  period:
    byYear: 2

- name: Year
  default: yyyy
  parts:
    - name: Year
      type: int
  period:
    first: new DateOnly(Value, 1, 1)
    year: Value
    yearDuration: 1

- name: Olympiad
  default: "{o:RN} 'Olympiad'"
  parts:
    - name: Olympiad
      type: int
      min: 1
      max: 40
  period:
    year: "1896 + ((Value - 1) * 4)"
    yearDuration: 4

- name: Decade
  default: tttt's'
  parts:
    - name: Decade
      type: int
      modulo: 10
  period:
    year: Value
    yearDuration: 10

- name: Century
  default: c
  parts:
    - name: Century
      type: int
  period:
    year: ((Value - 1) * 100) + 1
    yearDuration: 100
