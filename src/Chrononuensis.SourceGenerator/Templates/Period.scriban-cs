#nullable enable

using System.Globalization;

namespace Chrononuensis;

public partial record struct {{struct_name}} : IPeriod
{
    public int Days
        => LastDate.DayNumber - FirstDate.DayNumber + 1;

    public DateOnly FirstDate
        => {{ if first -}}
               {{- first -}}
           {{- else if by_year}}
               new DateOnly(Year, (12 / {{by_year}}) * ({{part}} - 1) + 1, 1)
           {{- else if year -}}
               new DateOnly({{year.value}}, 1, 1)
           {{- end -}};

    public DateOnly LastDate
        => {{ if last -}}
               {{- last -}}
           {{- else if by_year -}}
               FirstDate.AddMonths(12 / {{by_year}}).AddDays(-1)
           {{- else if year -}}
               FirstDate.AddYears({{year.duration ?? 1}}).AddDays(-1)
           {{- end -}};

    public DateTime LowerBound
        => FirstDate.ToDateTime(TimeOnly.MinValue);

    public DateTime UpperBound
        => LastDate.AddDays(1).ToDateTime(TimeOnly.MinValue);

    public bool Equals(IPeriod? other)
        => other is not null && FirstDate == other.FirstDate && LastDate == other.LastDate;
}
