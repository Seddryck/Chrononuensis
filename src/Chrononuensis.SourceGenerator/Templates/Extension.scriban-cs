namespace Chrononuensis.Extensions;

public static partial class {{struct_name}}Extension
{
    {{- for part in parts -}}
    {{- offset = for.index - 1}}
    {{- if !part.variable }}
    {{- if part.min && part.max }}
    public static {{ struct_name }} Add{{ part.name }}(this {{ struct_name }} value, int {{ part.name | string.downcase }})
        => value with {
                {{ part.name }} = (value.{{ part.name }} + {{ part.name | string.downcase }}) % {{ part.max }},  
                {{- factor = 1 }}
                {{- while (offset >= 0) }}
                {{- factor = factor * parts[offset+1].max }}
                {{ parts[offset].name }} = value.{{ parts[offset].name }} + (value.{{ part.name }} + {{ part.name | string.downcase }}) / {{ factor }}
                {{- offset = offset - 1 }}
                {{- if offset>0 }},{{ end }}
                {{- end }}
            };
    {{- else if !part.min }}
    {{- if parts.size > 1 }}
    public static {{ struct_name }} Add{{ part.name }}(this {{ struct_name }} value, int {{ part.name | string.downcase }})
        => value with { {{ part.name }} = value.{{ part.name }} + {{ part.name | string.downcase }} };
    {{- else }}
    public static {{ struct_name }} Add{{ part.name }}(this {{ struct_name }} value, int {{ part.name | string.downcase }})
        => value with { Value = value.Value + {{ part.name | string.downcase }}{{ if part.modulo }} * {{ part.modulo }}{{ end }} };
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
}
